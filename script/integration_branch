#!/usr/bin/env ruby

require 'date'

today = Date.today

# week changes saturday at midnight

goto_next = ARGV[0] == "--next"

this_deploy_date = today + (6 - today.wday)
next_deploy_date = today + 7 + (6 - today.wday)

this_branchname = "integration-#{this_deploy_date.to_s}"
next_branchname = "integration-#{next_deploy_date.to_s}"

goto_branchname = goto_next ? next_branchname : this_branchname

if system("git checkout #{goto_branchname}")
  puts ""
  puts "Found local"

  puts ""
  puts "Fetching remote:"
  `git fetch origin #{goto_branchname}`

  puts ""
  puts "Status:"
  puts `git status`
elsif system("git pull origin #{goto_branchname}")
  puts ""
  puts "Found remote"
  puts ""

  `git checkout #{goto_branchname}`
else
  base_branch = goto_next ? this_branchname : "master"

  puts ""
  puts "Did not find remote; branching off #{base_branch}"
  puts ""

  `git checkout #{base_branch}`
  `git pull origin #{base_branch}`
  `git checkout -b #{goto_branchname}`

  puts "Adding new entry to changelog:"

  changelog = File.open("changelog.txt", "a+")
  changelog_contents = changelog.read
  changelog.close
  new_entry_index = changelog_contents.index("## [")
  new_entry_header = "## [#{deploy_date.to_s}] [Since #{(deploy_date - 7).to_s} Integration]"
  new_changelog_contents = changelog_contents.insert(new_entry_index, "#{new_entry_header}\n\n\n")

  IO.write("changelog.txt", new_changelog_contents, 0)

  `git add changelog.txt`
  `git commit -m "Create changelog entry for #{deploy_date.to_s} deploy"`

  `git push --set-upstream origin #{goto_branchname}`
end
