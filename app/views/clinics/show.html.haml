- if @is_version
  = render 'versions/info'
  
%h2
  = @clinic.name
%h4.specialty_links
  = @clinic.specializations_including_in_progress.reject{ |s| s.in_progress and !current_user_is_admin? }.collect(){ |s| "<a href='#{specialization_path(s)}' class='#{ s.in_progress ? "in-progress ajax" : "ajax" }'>#{s.name}</a>" }.to_sentence.html_safe
%h5= @clinic.sector if @clinic.sector?
  
- if @clinic.not_responded?

  %p This clinic has not yet provided Pathways their information.
  
- elsif @clinic.purposely_not_yet_surveyed?

  %p This clinic has purposely not yet been surveyed by Pathways. It may be out of our current catchment area, or in a speciality we have yet to fully survey.
  
- else

  - address = @clinic.resolved_address
  - if @clinic.location.present? && @clinic.location.in_hospital?
    - hospital = @clinic.location.hospital_in
    %p
      %span.address= "In #{link_to hospital.name, hospital_path(hospital), :class => 'ajax'}".html_safe
    %p.collapse_up= link_to address.address, address.map_url, :target => "_blank" if address.present? && !address.empty?
    %p.collapse_up= @clinic.location.in_details if @clinic.location.in_details.present?
  - elsif address.present? && !address.empty?
    %p
      %span.address= link_to address.address, address.map_url, :target => "_blank"
  %p.collapse_up= "Wheelchair accessible" if @clinic.wheelchair_accessible?
  %p.collapse_up= @clinic.phone_and_fax if @clinic.phone_and_fax.present?
  %p.collapse_up= @clinic.schedule.days_and_hours.to_sentence if @clinic.scheduled?
        
  %p
    %strong{ :class => "status_#{@clinic.status_class}"}= @clinic.status.end_with_period
    - if not @clinic.limitations.blank?
      %p.collapse_up
        %strong Limitations:
        = @clinic.limitations.end_with_period
    - if not @clinic.location_opened.blank?
      %p.collapse_up
        This clinic opened at this location 
        = @clinic.location_opened == "Prior to 2010" ? "#{@clinic.location_opened.downcase}." : "in #{@clinic.location_opened}."

  - if not @clinic.languages.blank?
    %p
      %strong.language= @clinic.languages.map{ |x| x.name }.to_sentence
      = "#{@clinic.languages.count == 1 ? 'is' : 'are' } spoken at this clinic."
        
  .investigation  
    - if not @clinic.required_investigations.blank?
      %p
        %strong Required investigations for all patients:
        = @clinic.required_investigations.end_with_period
    - specialization_procedures, specialization_count, specialization_has_investigations = compressed_procedures_indented(@clinic, ProcedureSpecialization::CLASSIFICATION_FOCUSED)
    - if specialization_count > 0
      %p.collapse_up
        %strong Areas of practice:
        - if specialization_has_investigations
          with any 
          %i additional 
          required investigations
        = specialization_procedures.html_safe
    - custom_procedures, custom_count, custom_has_investigations = compressed_procedures_indented(@clinic, ProcedureSpecialization::CLASSIFICATION_NONFOCUSED)
    - if custom_count > 0
      %p.collapse_up
        %strong Other areas of interest:
        - if custom_has_investigations
          with any 
          %i additional 
          required investigations
        = custom_procedures.html_safe
  - if not @clinic.interest.blank?
    %p.collapse_up
      %strong Most interested in:
      = @clinic.interest.end_with_period
  - if not @clinic.not_performed.blank?
    %p.collapse_up
      %strong Does not see or do:
      = @clinic.not_performed.end_with_period
    
  %p
    - if @clinic.accepts_referrals_via.presence and @clinic.responds_via.presence
      %strong.referral Referrals:
      = "accepted by #{@clinic.accepts_referrals_via}. Responded to by #{@clinic.responds_via}."
    - elsif @clinic.accepts_referrals_via.presence
      %strong.referral Referrals:
      = "accepted by #{@clinic.accepts_referrals_via}."
    - elsif @clinic.responds_via.presence
      %strong.referral Referrals:
      = "responded to by #{@clinic.responds_via}."

  - if @clinic.referral_form_mask == 1
    - referral_form_count = @clinic.referral_forms.reject{|referral_form| not referral_form.form.present?}.length
    %p.collapse_up= "This office has #{ referral_form_count > 1 ? 'referral forms' : 'a referral form'}."
    %ul.referral_forms
      - @clinic.referral_forms.each do |referral_form|
        - next if not referral_form.form.present?
        - type = referral_form.form_content_type.split('/').last
        %li= link_to "#{referral_form.description} (#{type})", referral_form.form.url, :target => "_blank"
  - elsif @clinic.referral_form_mask == 2
    %p.collapse_up This office does not have a referral form.
    
  -if @clinic.waittime.presence
    %p.collapse_up
      Average patient wait time from referral to appointment:
      %strong= @clinic.waittime
          
  -if @clinic.lagtime.presence
    %p.collapse_up
      Average length of time to notify GP of a booking date:
      %strong= @clinic.lagtime
    
  - if @clinic.patient_can_book_mask == 1
    %p.collapse_up This office accepts direct calls from patients after referral to book their own appointments.
  - elsif @clinic.patient_can_book_mask == 2
    %p.collapse_up This office does not accept direct calls from patients after referral to book their own appointments.
    
  .red_flag
    - if not @clinic.red_flags.blank?
      %p
        %strong Red flags
        that this clinic feels warrants urgent consultation:
        = @clinic.red_flags.end_with_period
    - if not @clinic.urgent_referrals_via.blank?
      %p.collapse_up
        %strong Urgent consulation: 
        = "should be referred via #{@clinic.urgent_referrals_via}."
        
  .patient_information
    - if @clinic.patient_instructions.present? && @clinic.cancellation_policy.present?
      %p
        %strong Patient instructions:
        = @clinic.patient_instructions.end_with_period
      %p.collapse_up
        %strong Cancellation policy:
        = @clinic.cancellation_policy.end_with_period
    - elsif @clinic.patient_instructions.present?
      %p
        %strong Patient instructions:
        = @clinic.patient_instructions.end_with_period
    -elsif @clinic.cancellation_policy.present?
      %p
        %strong Cancellation policy:
        = @clinic.cancellation_policy.end_with_period
    
  - if not @clinic.healthcare_providers.blank?
    %p
      %strong Healthcare providers 
      who see patients at the clinic:
      != @clinic.healthcare_providers.map{ |x| x.name }.join(", ")

  - if @clinic.attendances?
    %p
      %strong.attendance Physicians
      who see patients at the clinic:
    %ul
      - @clinic.attendances.each do |attendance|
        - if attendance.is_specialist
          - if attendance.specialist
            %li
              %a.ajax{"href" => specialist_path(attendance.specialist)}= attendance.specialist.name
              = "- #{attendance.area_of_focus}" if not attendance.area_of_focus.blank?
        - else
          %li
            = attendance.freeform_name
            = "- #{attendance.area_of_focus}" if not attendance.area_of_focus.blank?
            
- if current_user_is_admin?
  - if not @clinic.controlling_users.blank?
    %p.admin
      %strong.control Users 
      that can edit this clinic:
      != @clinic.controlling_users.map{ |user| "<a class='ajax' href='#{user_path(user)}'>#{user.name}</a>" }.to_sentence

%p.admin.btn-group
  - if can? :update, @clinic
    = link_to("<i class='icon-pencil'></i>".html_safe + " Edit", edit_clinic_path(@clinic), :class => "btn ajax")
  - if current_user_is_admin?
    = link_to("<i class='icon-folder-open'></i>".html_safe + " History", clinic_versions_path(@clinic), :class => "btn ajax")
  - if can? :destroy, @clinic
    = link_to("<i class='icon-trash'></i>".html_safe + " Delete", @clinic, :confirm => "Delete #{@clinic.name}?", :method => :delete, :class => "btn")

