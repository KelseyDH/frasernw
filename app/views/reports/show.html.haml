- title "#{@report.name}"

.content-wrapper

  %h2= @report.name
  %h4= "#{@report.level} report on #{@report.type.downcase}"
  %h4= "Reporting on #{@report.user_type.pluralize.downcase}"
  %h4= "#{@report.start_date} - #{@report.end_date}"

  - if @h
  
    = javascript_include_tag :highcharts
    = high_chart("my_id", @h)
    
  - if @report.by_user

    %table#user_table.table.table-condensed

    %script{"type" => "text/javascript"}
      :plain
        $('#user_table').dataTable( {
        "aaData": #{@user_results.to_json.html_safe},
        "aoColumns": [
          { "sTitle": "Name", "sWidth": "50%" },
          { "sTitle": "Visits" },
          { "sTitle": "Visitors" },
          { "sTitle": "Pageviews" }
        ],
        "asSorting": [[1,'desc']],
        "sPaginationType": "bootstrap"
      } );
      
  - if @report.by_pageview

    %table#pageviews_table.table.table-condensed

    %script{"type" => "text/javascript"}
      :plain
        $('#pageviews_table').dataTable( {
        "aaData": #{@by_page_pageviews.to_json.html_safe},
        "aoColumns": [
          { "sTitle": "Name", "sWidth": "75%" },
          { "sTitle": "Pageviews" }
        ],
        "sPaginationType": "bootstrap"
      } );
      
  - if @specialist_email_table.present?
  
    %table.table.table-condensed.table-striped
      %tr
        %th Specialist
        %th Emails
        %th Secret edit link
        %th Last updated by anyone
        %th Last updated via review queue
      - @specialist_email_table.each do |specialization_id, entries|
        %tr
          %th{:colspan => 4}= Specialization.find(specialization_id).name
        - entries.each do |entry|
          %tr
            %td
              %a.ajax{:href => "/specialists/#{entry[:id]}"}= entry[:name]
            %td
              %ul
                - (entry[:user_email] + [entry[:moa_email]]).uniq.map{ |e| mail_to e }.each do |e|
                  %li= e.html_safe
            %td= link_to specialist_self_edit_path(entry[:id], entry[:token], :only_path => false)
            %td= entry[:updated_at].strftime("%Y-%m-%d")
            %td= entry[:reviewed_at].present? ? entry[:reviewed_at].strftime("%Y-%m-%d") : 'never'

  %p.admin.btn-group
    - if can? :update, @report
      = link_to("<i class='icon-pencil'></i>".html_safe + " Edit Report", edit_report_path(@report), :class => "btn ajax")
    - if can? :destroy, @report
      = link_to("<i class='icon-trash'></i>".html_safe + " Delete Report", @report, :confirm => "Delete #{@report.name}?", :method => :delete, :class => "btn")