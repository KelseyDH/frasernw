!!!
%html

  %head
    %title
      = yield(:title) || "Untitled"
    %meta{"http-equiv"=>"Content-Type", :content=>"text/html; charset=utf-8"}
    %meta{"name"=>"viewport", :content=>"width=device-width, initial-scale=1, maximum-scale=1"}

    /[if lte IE 9]
      =stylesheet_link_tag 'application-ie'

    = stylesheet_link_tag "application"
    = javascript_include_tag "application"
    = csrf_meta_tag
    = yield(:head)

  %body{:id => "#{params[:controller]}_page"}
    #main-nav.navbar
      .navbar-inner
        .container
          = link_to "Pathways", root_url, :class => "brand"
          - if logged_in?
            %ul.nav.pull-left
              %li= link_to "Pearls", "#"
              %li= link_to "Handouts", "#"
              %li= link_to "Videos", "#"
              %li= link_to "Logout", logout_url
            %form.navbar-search.pull-right
              %input.search-query{"type" => "text", "placeholder" => "Search"}
    -# if logged_in? and current_user.admin?
      #admin-nav.navbar
        .navbar-inner
          .container
            %ul.nav
              /%li= link_to "Track Specialists", tracker_path
              %li= link_to "Activity", all_versions_path
              %li= link_to "Review Queue (#{Review.count})", reviews_path
              %li= link_to "Users", users_path
              %li= link_to "Specialities", specializations_path
              %li= link_to "Specialists", specialists_path
              %li= link_to "Clinics", clinics_path
              %li= link_to "Hospitals", hospitals_path
              %li= link_to "Areas of Practice", procedures_path
              %li= link_to "Healthcare Providers", healthcare_providers_path
              %li= link_to "Languages", languages_path
              %li= link_to "Cities", cities_path

    #body.container
      .row
        - unless params[:controller] == 'user_sessions'
          #left-nav.span3
            #root
              %h3 Specialities
              %ul
                - Specialization.all.each do |specialization|
                  %li
                    %a.push{"href" => "#", "onclick" => "ajaxto('#{specialization_path(specialization)}')", "data-toggle" => "push", "data-target" => "#section_#{specialization.id}"}= specialization.name
              
            - Specialization.all.each do |specialization|
              .nav_panel{ "id" => "section_#{specialization.id}" }
                %h3= specialization.name
                %ul
                  %li
                    %a.pop{"href" => "#", "data-toggle" => "pop", "data-target" => "#section_#{specialization.id}", "data-parent" => "#root"} Back
                  - specialization.procedure_specializations_arranged.each do |ps,children|
                    - next if not ps.procedure.specialization_level
                    %li 
                      - if children.length > 0
                        %a.push{"href" => "#", "onclick" => "ajaxto('#{procedure_path(ps.procedure)}')", "data-toggle" => "push", "data-target" => "#procedure_#{ps.procedure.id}"}= ps.procedure.name
                      - else
                        %a{"href" => "#", "onclick" => "ajaxto('#{procedure_path(ps.procedure)}')"}= ps.procedure.name
                      
              - specialization.procedure_specializations_arranged.each do |ps,children|
                - next if children.length == 0
                - next if not ps.procedure.specialization_level
                .nav_panel{ "id" => "procedure_#{ps.procedure.id}" }
                  %h3= ps.specialization.name
                  %ul
                    %li
                      %a.pop{"href" => "#", "data-toggle" => "pop", "data-target" => "#procedure_#{ps.procedure.id}", "data-parent" => "#section_#{specialization.id}"} Back
                    - children.each do |ps,children|
                      - next if not ps.procedure.specialization_level
                      %li
                        %a{"href" => "#", "onclick" => "ajaxto('#{procedure_path(ps.procedure)}')"}= ps.procedure.name

        #content.span9
          %div{:id => "container"}
            - flash.each do |type, msg|
              .alert.alert-success= msg
            = yield
