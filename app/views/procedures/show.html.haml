- title "Pathways | #{@procedure.full_name}"

- specialization = @procedure.specializations.first
    
%ul#specialties-menu
  %li.dropdown
    %a.specialties-dropdown-toggle{"href" => "javascript:void(0)"}
      Specialties
      %b.caret
  %li.subsequent.next= @procedure.procedure_specializations.reject{ |ps| ps.specialization.in_progress and !current_user_is_admin? }.collect(){ |ps| "<a href=\"#{specialization_path(ps.specialization)}\" class='#{ ps.specialization.in_progress ? "in-progress ajax" : "ajax"}'>#{ps.specialization.name}</a>" }.to_sentence.html_safe
  %li.subsequent= @procedure.name
  
%script{"type" => "text/javascript"}
  :plain
    var $el = $('a.specialties-dropdown-toggle').on('click.specialties-dropdown-toggle', function () { $('#specialties-dropdown-menu').toggle(); $('#specialties-menu li.subsequent').toggleClass('border'); return false; });
    $('html').on('click.specialties-dropdown-toggle', function () { $('#specialties-dropdown-menu').hide() });
  
#specialties-dropdown-menu
  .inner
    - specializations = Specialization.all
    - first = specializations[0, (specializations.length / 4.0).ceil]
    - second = (specializations - first)[0, ((specializations.length - first.length) / 3.0).ceil]
    - third = (specializations - first - second)[0, ((specializations.length - first.length - second.length) / 2.0).ceil]
    - fourth = specializations - first - second - third
    
    - [first, second, third, fourth].each do |list|
      %ul
        - list.each do |specialization|
          %li
            %a.ajax{"href" => specialization_path(specialization), :class => specialization.in_progress ? "in-progress" : ""}= specialization.name
  
- multiple_specialties = (@procedure.specializations.length > 1)

- if multiple_specialties
  %script{"type" => "text/javascript"}
    :plain
      $(document).ready(function() {
        //sort by status, wait time, then city
          $('.tablesorter').tablesorter({sortList: [[2,0],[3,0],[4,0]]});
      });
- else
  %script{"type" => "text/javascript"}
    :plain
      $(document).ready(function() {
        //sort by status, wait time, then city
          $('.tablesorter').tablesorter({sortList: [[1,0],[2,0],[3,0]]});
      });

- has_specialists = @procedure.all_specialists.length > 0
- has_clinics = @procedure.all_clinics.length > 0

- specialist_tab_class = has_specialists ? "active" : ""
- clinic_tab_class = has_specialists ? "" : "active"

.tabbable
  %ul#content_tabs.nav.nav-tabs
    - if has_specialists
      %li{:class => specialist_tab_class} 
        %a#specialists_tab{"href" => "#specialist_tab", "data-toggle" => "tab"}
          %span Specialists
    - if has_clinics
      %li{:class => clinic_tab_class}
        %a#clinics_tab{"href" => "#clinic_tab", "data-toggle" => "tab"}
          %span Clinics
    - if true
      %li
        %a#risk_calculators_tab{"href" => "#calculator_tab", "data-toggle" => "tab"}
          %span Risk Calculators
      %li
        %a#care_pathways_tab{"href" => "#care_pathways_tab", "data-toggle" => "tab"}
          %span Care Pathways
      %li
        %a#pearls_tab{"href" => "#pearls_tab", "data-toggle" => "tab"}
          %span Pearls
      %li
        %a#red_flags_tab{"href" => "#red_flags_tab", "data-toggle" => "tab"}
          %span Red Flags
      %li
        %a#patient_education_tab{"href" => "#patient_education_tab", "data-toggle" => "tab"}
          %span Patient Education

  .content-wrapper
  
    - cache(:action => 'show', :cache_path => procedure_path(@procedure)) do

      %script{"type" => "text/javascript"}
        $(document).ready(function() {
        - @procedure.all_specialists.each do |s|
          - next if not s.show_in_table?
          $('#s#{s.id}').data('filter', '#{specialist_filtering_attributes(s, false).join(' ')}');
        - @procedure.clinics.each do |c|
          - next if not c.show_in_table?
          $('#c#{c.id}').data('filter', '#{clinic_filtering_attributes(c).join(' ')}');
        });
      
      .tab-content
        - if has_specialists
          #specialist_tab.tab-pane{:class => specialist_tab_class}
            .content
              .row
                .span8half
                  - assumed_specializations = @procedure.procedure_specializations.reject{ |ps| !ps.assumed? }.map{ |ps| ps.specialization }
                  - if assumed_specializations.present?
                    #specialist_assumed.assumed-phrase
                      It is assumed that all #{assumed_specializations.map{ |s| s.member_name.uncapitalize_first_letter.pluralize }.to_sentence} see #{@procedure.name.uncapitalize_first_letter}
                
                  #specialist_phrase.filter-phrase
                
                  %table.table.table-condensed.tablesorter{:id => 'specialist_table', :class => multiple_specialties && 'five'}
                    %thead
                      %tr{:class => 'tableheader'}
                        %th{:class => "{sorter: 'bylastname'} name_column"} Specialist
                        - if multiple_specialties
                          %th{:class => "{sorter: 'text'} specialty_column"} Specialty
                        %th{:class => "{sorter: 'status'} status_column"} Accepting New<br>Patients?
                        %th{:class => "{sorter: 'waittime'} wait_time_column"} Average Patient<br>Wait Time
                        %th{:class => "{sorter: 'blanks_to_bottom'} city_column"} City
                    %tbody
                      - (@procedure.all_specialists).each do |specialist|
                        - next if not specialist.show_in_table?
                        %tr{:class => specialist.disabled_in_table? && "disabled", :id => "s#{specialist.id}"}
                          %td
                            %a.ajax{"href" => specialist_path(specialist)}= specialist.name
                          - if multiple_specialties
                            %td
                              %ul
                                - specialist.specializations.each do |s|
                                  %li= s.name
                          %td
                            %span{:class => "status_#{specialist.status_class}"}= specialist.status_class
                          %td= specialist.waittime
                          %td= specialist.city
                                
                  #other_specialists.filter-others
                      
                      
                .span3.offsethalf
                  .well.filter
                    .title
                      Filter Specialists
                              
                    .filter-group
                      %a.filter-group-title.open{"data-toggle" => "collapse", "href" => "#specialist-filter-referral"}
                        Referrals
                      #specialist-filter-referral.collapsable.in
                        .filter-group-content
                          %label
                            %input#srph.sr{"type" => "checkbox"} Accepted via phone
                          %label.indent
                            Responded to within:
                            %select.sc
                              %option{"value" => 0} Any timeframe
                              - Specialist::LAGTIME_HASH.each do |lag_index, lag_value|
                                %option{"value" => "sc#{lag_index}_"}= lag_value
                          %label
                            %input#srpb.sr{"type" => "checkbox"} Patients can call to book after referral
                    
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-sex"}
                        Sex
                      #specialist-filter-sex.collapsable.collapse
                        .filter-group-content
                          %label.half
                            %input#ssm.ss{"type" => "checkbox"} Male
                          %label.half
                            %input#ssf.ss{"type" => "checkbox"} Female
                    
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-language"}
                        Languages
                      #specialist-filter-language.collapsable.collapse
                        .filter-group-content
                          %label
                            %input#si.si{"type" => "checkbox"} Interpreter available
                          - Language.all.each do |l|
                            %label.half
                              %input.sl{"type" => "checkbox", "id" => "sl#{l.id}_"}= l.name
                              
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-association"}
                        Assocations
                      #specialist-filter-association.collapsable.collapse
                        .filter-group-content
                          %label.indent
                            Clinic:
                            %select.sa
                              %option{"value" => 0} Any
                              - @procedure.clinics.each do |c|
                                %option{"value" => "sac#{c.id}_"}= c.name
                          %label.indent
                            Hospital:
                            %select.sa
                              %option{"value" => 0} Any
                              - Hospital.all.each do |h|
                                %option{"value" => "sah#{h.id}_"}= h.name

                  %script{"type" => "text/javascript"}
                    - member_name = @procedure.specializations.length == 1 ? @procedure.specializations.first.member_name.uncapitalize_first_letter.pluralize : 'specialists'
                    :plain
                      $(document).ready(function() {
                        var update_custom_specialist_table = function()
                        {
                          update_table('s', 'specialist', '#{member_name}');
                        }
                        $('.sp, .sc, .sr, .ss, .si, .sl, .sa').click( update_custom_specialist_table );
                      });
        
              
        - if has_clinics
          #clinic_tab.tab-pane{:class => clinic_tab_class}
          
            .content
              .row
                .span8half
                  #clinic_phrase.filter-phrase
                  
                  %table.table.table-condensed{:class => 'tablesorter {sortlist: [[2,0],[3,0]]}', :id => 'clinic_table', :class => multiple_specialties && 'five'}
                    %thead
                      %tr{:class => 'tableheader'}
                        %th{:class => "{sorter: 'bylastname'} name_column"} Clinic
                        - if multiple_specialties
                          %th{:class => "{sorter: 'text'} specialty_column"} Specialty
                        %th{:class => "{sorter: 'status'} status_column"} Accepting New<br>Patients?
                        %th{:class => "{sorter: 'waittime'} wait_time_column"} Average Patient<br>Wait Time
                        %th{:class => "{sorter: 'blanks_to_bottom'} city_column"} City
                    %tbody
                      - (@procedure.all_clinics).each do |clinic|
                        - next if not clinic.show_in_table?
                        %tr{:class => clinic.disabled_in_table? && "disabled", :id => "c#{clinic.id}"}
                          %td
                            %a.ajax{"href" => clinic_path(clinic)}= clinic.name
                          - if multiple_specialties
                            %td= clinic.specializations.collect(){ |s| s.name }.to_sentence
                          %td
                            %span{:class => "status_#{clinic.status_class}"}= clinic.status_class
                          %td= clinic.waittime
                          %td= clinic.city
                          
                .span3.offsethalf
                  .well.filter
                    .title
                      Filter Clinics
                              
                    .filter-group
                      %a.filter-group-title.open{"data-toggle" => "collapse", "href" => "#clinic-filter-referral"}
                        Referrals
                      #clinic-filter-referral.collapsable.in
                        .filter-group-content
                          %label
                            %input#crph.cr{"type" => "checkbox"} Accepted via phone
                          %label.indent
                            Responded to within:
                            %select.cc
                              %option{"value" => 0} Any timeframe
                              - Clinic::LAGTIME_HASH.each do |lag_index, lag_value|
                                %option{"value" => "csc#{lag_index}_"}= lag_value
                          %label
                            %input#crpb.cr{"type" => "checkbox"} Patients can call to book after referral
                              
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-details"}
                        Details
                      #clinic-filter-details.collapsable.collapse
                        .filter-group-content
                          %label.half
                            %input#cdpb.cd{"type" => "checkbox"} Public
                          %label.half
                            %input#cdpv.cd{"type" => "checkbox"} Private
                          %label
                            %input.cd{"type" => "checkbox", "id" => "cdwa"} Wheelchair Accessible
                    
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-schedule"}
                        Schedule
                      #clinic-filter-schedule.collapsable.collapse
                        .filter-group-content
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshmon"} Monday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshtues"} Tuesday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshwed"} Wednesday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshthurs"} Thursday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshfri"} Friday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshsat"} Saturday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshsun"} Sunday
                    
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-healthcare-provider"}
                        Healthcare Providers
                      #clinic-filter-healthcare-provider.collapsable.collapse
                        .filter-group-content
                          - HealthcareProvider.all.each do |h|
                            %label
                              %input.ch{"type" => "checkbox", "id" => "ch#{h.id}_"}= h.name
                    
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-language"}
                        Languages
                      #clinic-filter-language.collapsable.collapse
                        .filter-group-content
                          %label
                            %input#ci.ci{"type" => "checkbox"} Interpreter available
                          - Language.all.each do |l|
                            %label.half
                              %input.cl{"type" => "checkbox", "id" => "cl#{l.id}_"}= l.name

                  %script{"type" => "text/javascript"}
                    :plain
                      $(document).ready(function() {
                        $('.cp, .cc, .cr, .cd, .csh, .ch, .ci, .cl').click( update_clinic_table );
                      });

        %script{"type" => "text/javascript"}
          :plain
            $('.collapsable').on('shown', function() {
              $(this).siblings('.filter-group-title').removeClass('closed').addClass('open');
            });
            $('.collapsable').on('hidden', function() {
              $(this).siblings('.filter-group-title').removeClass('open').addClass('closed');
            });
                      
        #calculator_tab.tab-pane
                      
        #care_pathways_tab.tab-pane
          - if @procedure.id == 218 #Primary care obstetrics
            %ul
              %li=link_to "Routine pregnancy care schedule", "/content/routine_pregnancy_care.html", :class => "ajax"
              
          - if @procedure.id == 21 #Back
            %p.space.no_indent In low back pain, radiographs are indicated with:
            %ul 
              %li Recent significant trauma, or milder trauma age >50 
              %li Suspected cancer
              %li Suspected infection 
              %li Back pain with lower limb neurologic deficit
              
          - if @procedure.id == 10 #Knee
            %h4 Ottawa Knee Rules
            %p.space.no_indent If any of the following criteria are met after knee trauma, consider an x-ray:
            %ul 
              %li Age > 55   
              %li Isolated tenderness of the patella
              %li Tenderness at the fibular head
              %li Unable to flex knee to 90 degrees
              %li Unable to bear weight immediately and in the ED (4 steps, limping is OK)
              
          - if @procedure.id == 443 #Heart Failure
            %a{"href" => "http://www.bcguidelines.ca/pdf/heart_failure_summary.pdf", "target" => "_blank"} GPAC Summary: Heart Failure Care
            
            
          - if @procedure.id == 441 #Hypertension
            %a{"href" => "http://www.bcguidelines.ca/pdf/hypertension_summary.pdf", "target" => "_blank"} GPAC Summary: Hypertension - Detection, Diagnosis and Management
                      
        #pearls_tab.tab-pane
          - if @procedure.id == 365 #Colonoscopy
            %ul
              %li=link_to "Polyp Results", "/content/polyp.html", :class => "ajax"
          - if @procedure.id == 231 #Sexual wellness
            %ul
              %li=link_to "Oral contraceptives and venous thromboembolic risks", "/content/oral_contraceptives.html", :class => "ajax"
                      
        #red_flags_tab.tab-pane
              
          - if @procedure.id == 12 || @procedure.id == 154 #Foot and Ankle
            %h3 Ankle and Foot
            %ul
              %li fracture
              %li dislocation
              %li infected joint
              %li rupture of Achilles tendon
              
          - if @procedure.id == 10 || @procedure.id == 9 #Knee & hip
            %h3 Knee and Hip
            %ul
              %li fracture
              %li locked knee
              %li infected joint
              %li rupture of quadriceps tendon or patellar tendony
              
          - if @procedure.id == 21 #Back
            %h4 Red Flags for Low Back Pain
            %ul 
              %li Major trauma
              %li Minor trauma in the elderly or osteoporotic Age > 50 or < 20 years 
              %li History of cancer 
              %li Constitutonal symptoms (fever, chills, weight loss) 
              %li Recent bacterial infection 
              %li IV drug use 
              %li Immunosuppression 
              %li Pain worse at night or when supine 
              %li Severe progressive sensory alteration or weakness 
              %li Bladder or bowel dysfuncion 
              %li Evidence of neurological deficit in the perineum
                      
        #patient_education_tab.tab-pane

    %p.admin.btn-group
      - if can? :update, @procedure
        = link_to("<i class='icon-pencil'></i>".html_safe + " Edit Area of Practice", edit_procedure_path(@procedure), :class => "btn ajax")
      - if can? :destroy, @procedure
        = link_to("<i class='icon-trash'></i>".html_safe + " Delete Area of Practice", @procedure, :confirm => "Delete #{@procedure.name}?", :method => :delete, :class => "btn")
