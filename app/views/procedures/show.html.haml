- multiple_specialties = (@procedure.specializations.length > 1)


- if multiple_specialties
  :javascript
    $(document).ready(function() {
      //sort by status then wait time
        $('.tablesorter').tablesorter({sortList: [[2,0],[3,0]]});
    });
- else
  :javascript
    $(document).ready(function() {
      //sort by status then wait time
        $('.tablesorter').tablesorter({sortList: [[1,0],[2,0]]});
    });

%h2= "#{@procedure.name}"
%h4= @procedure.procedure_specializations.collect(){ |ps| compressed_ancestry(ps) }.to_sentence

- has_specialists = @procedure.specialists.length > 0
- has_clinics = @procedure.clinics.length > 0

- specialist_tab_class = has_specialists ? "active" : ""
- clinic_tab_class = has_specialists ? "" : "active"

.tabbable
  - if (has_specialists and has_clinics)
    %ul.nav.nav-tabs
      %li{:class => specialist_tab_class} 
        %a{"href" => "#specialist_tab", "data-toggle" => "tab"} Specialists
      %li{:class => clinic_tab_class}
        %a{"href" => "#clinic_tab", "data-toggle" => "tab"} Clinics

  .tab-content
    - if has_specialists
      #specialist_tab.tab-pane{:class => specialist_tab_class}
        %table.table.table-condensed.tablesorter{:id => 'specialist_table'}
          %thead
            %tr{:class => 'tableheader'}
              %th{:class => "{sorter: 'bylastname'}"} Specialist
              - if multiple_specialties
                %th{:class => "{sorter: 'text'}"} Speciality
              %th{:class => "{sorter: 'status'} status_column"} Accepting Patients?
              %th{:class => "{sorter: 'waittime'}"} Wait Time
              %th{:class => "{sorter: 'blanks_to_bottom'}"} City
          %tbody
            - (@procedure.specialists).each do |specialist|
              %tr{:class => specialist.responded ? "" : "not-responded"}
                %td
                  %a{"href" => "#", "onclick" => "ajaxto('#{specialist_path(specialist)}')"}= specialist.name
                - if multiple_specialties
                  %td= specialist.specializations.collect(){ |s| s.name }.to_sentence
                %td{:class => "status_#{specialist.status_class}"}= specialist.status_class
                %td= specialist.waittime
                %td= specialist.addresses.first ? specialist.addresses.first.city : ""
    
          
    - if has_clinics
      #clinic_tab.tab-pane{:class => clinic_tab_class}
        %table.table.table-condensed{:class => 'tablesorter {sortlist: [[2,0],[3,0]]}', :id => 'specialist_table'}
          %thead
            %tr{:class => 'tableheader'}
              / see tablesorter docx for sorters 
              %th{:class => "{sorter: 'bylastname'} name_column"} Clinic
              - if multiple_specialties
                %th{:class => "{sorter: 'text'}"} Speciality
              %th{:class => "{sorter: 'status'} status_column"} Accepting Patients?
              %th{:class => "{sorter: 'waittime'}"} Wait Time
              %th{:class => "{sorter: 'blanks_to_bottom'}"} City
          %tbody
            - (@procedure.clinics).each do |clinic|
              %tr
                %td
                  %a{"href" => "#", "onclick" => "ajaxto('#{clinic_path(clinic)}')"}= clinic.name
                - if multiple_specialties
                  %td= clinic.specializations.collect(){ |s| s.name }.to_sentence
                %td{:class => "status_#{clinic.status_class}"}= clinic.status_class
                %td= clinic.waittime
                %td= clinic.addresses.first ? clinic.addresses.first.city : ""

%p.admin
  = link_to "Edit area of practice", edit_procedure_path
  |
  = link_to "Delete area of practice", @procedure, :confirm => "Delete #{@procedure.name}?", :method => :delete
  |
  = link_to "View all areas of practice", procedures_path
