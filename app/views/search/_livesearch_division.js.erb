<% cache("livesearch_" + division_path(division)) do

  search_data = Array.new

  order_map = {
    "Specializations" => "1",
    "Specialists" => "2",
    "Clinics" => "3",
    "Content" => "4",
    "Procedures" => "5",
    "Hospitals" => "6",
    "Languages" => "7"
  }

  ScCategory.all.each do |category|
    order_map[ category.name ] = ( order_map.length + 1 ).to_s
  end

  specialists = Specialist.includes(:specialist_specializations => :specialization, :specialist_offices => { :office => { :location => [{:address => :city}, {:hospital_in => {:location => { :address => :city}}}, {:clinic_in => {:location => [{:address => :city}, {:hospital_in => {:location => { :address => :city}}}]}}]}}).in_divisions([division])

  specialists.each do |specialist|

    #this handles those that only belong to specializations that are "in progress", as well as orphaned entities
    next if specialist.specialist_specializations.reject{ |ss| ss.specialization.blank? or ss.specialization.in_progress }.length == 0
    
    entry = { 
      "n" => specialist.billing_number_padded ? specialist.name + " - MSP #" + specialist.billing_number_padded: specialist.name, 
      "sp" => specialist.specialist_specializations.reject{ |ss| ss.specialization.blank? or ss.specialization.in_progress }.collect{ |ss| ss.specialization_id }, 
      "c" => specialist.cities.map{ |city| city.id },
      "st" => specialist.status_class_hash,
      "id" => specialist.id,
      "go" => order_map["Specialists"] }
    search_data << entry
  end

  clinics = Clinic.includes(:location => [{:address => :city}, {:hospital_in => {:location => { :address => :city}}}]).in_divisions([division])

  clinics.each do |clinic|

    #this handles those that only belong to specializations that are "in progress", as well as orphaned entities
    next if clinic.clinic_specializations.reject{ |cs| cs.specialization.in_progress }.length == 0
    
    entry = { 
      "n" => clinic.name, 
      "sp" => clinic.clinic_specializations.reject{ |cs| cs.specialization.in_progress }.collect{ |cs| cs.specialization_id },
      "c" => clinic.city.present? ? clinic.city.id : "",
      "st" => clinic.status_class_hash,
      "id" => clinic.id,
      "go" => order_map["Clinics"] }
    search_data << entry
  end

  ScCategory.all.each do |category|
    category.all_sc_items_in_divisions([division]).reject{ |item| !item.searchable? }.each do |item|
      entry = { 
        "n" => item.title, 
        "sp" => item.specializations.reject{ |s| s.in_progress }.collect{ |s| s.id },
        "id" => item.id,
        "go" => order_map[category.name] }
      search_data << entry
    end
  end

  -%>
  pathways_division_search_data["<%= division.id %>"] = <%=search_data.to_json.html_safe %>

<% end -%>
