<% cache("livesearch_" + division_path(division) + "_entries") do

  search_data = Array.new

  order_map = {
    "Specializations" => "1",
    "Specialists" => "2",
    "Clinics" => "3",
    "Content" => "4",
    "Procedures" => "5",
    "Hospitals" => "6",
    "Languages" => "7"
  }

  ScCategory.all.each do |category|
    order_map[ category.name ] = ( order_map.length + 1 ).to_s
  end

  specialists = []
  clinics = []
  
  Specialization.all.each do |specialization|

    specialists += specialization.specialists
  
    clinics += specialization.clinics

  end
  
  #find all the specializations that are not in progress for each division
  not_in_progress_specialization_ids = {};
  
  Division.all.each do |d|
    not_in_progress_specialization_ids[d.id] = Specialization.not_in_progress_for_divisions([d]).map{ |s| s.id }
  end

  specialists.flatten.uniq.each do |specialist|
  
    #find the specializations that are not in progress for this specialist
    specialist_not_in_progress_specialization_ids = []
    specialist.divisions.each do |d|
      specialist_not_in_progress_specialization_ids |= not_in_progress_specialization_ids[d.id]
    end
  
    specialization_ids = specialist.specializations.map{ |s| s.id } & specialist_not_in_progress_specialization_ids
    next if specialization_ids.blank?
    
    entry = {
      "n" => specialist.billing_number_padded ? specialist.name + " - MSP #" + specialist.billing_number_padded: specialist.name,
      "sp" => specialization_ids,
      "c" => specialist.cities_for_display.map{ |city| city.id },
      "st" => specialist.status_class_hash,
      "id" => specialist.id,
      "go" => order_map["Specialists"] }
    search_data << entry
  end

  clinics.flatten.uniq.each do |clinic|
  
    clinic_not_in_progress_specialization_ids = []
    clinic.divisions.each do |d|
      clinic_not_in_progress_specialization_ids |= not_in_progress_specialization_ids[d.id]
    end
  
    specialization_ids = clinic.specializations.map{ |s| s.id }  & clinic_not_in_progress_specialization_ids
    next if specialization_ids.blank?
    
    entry = { 
      "n" => clinic.name, 
      "sp" => specialization_ids,
      "c" => clinic.cities.map{ |city| city.id },
      "st" => clinic.status_class_hash,
      "id" => clinic.id,
      "go" => order_map["Clinics"] }
    search_data << entry
  end

  -%>
  pathways_division_search_data_entries["<%= division.id %>"] = <%=search_data.to_json.html_safe %>

<% end -%>
