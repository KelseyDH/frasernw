<% search_data = Array.new 

Specialization.all.each do |specialization|

  next if specialization.in_progress
  
  entry = { 
    "name" => specialization.name, 
    "specialty" => "",
    "city" => "", 
    "status" => "",
    "wait_time" => "",
    "url" => url_for(specialization),
    "group_name" => "Specialties",
    "group_order" => 5 }
  search_data << entry
end 

Procedure.all.each do |procedure|

  #this handles those that only belong to specializations that are "in progress", as well as orphaned entities
  next if procedure.specializations.length == 0
  
  entry = { 
    "name" => procedure.name, 
    "specialty" => procedure.specializations.collect{ |s| s.name }.to_sentence,
    "city" => "", 
    "status" => "",
    "wait_time" => "",
    "url" => url_for(procedure),
    "group_name" => "Areas of Practice",
    "group_order" => 4 }
  search_data << entry
end 

Specialist.all.each do |specialist|

  #this handles those that only belong to specializations that are "in progress", as well as orphaned entities
  next if specialist.specializations.length == 0
  
  entry = { 
    "name" => specialist.name, 
    "specialty" => specialist.specializations.collect{ |s| s.name }.to_sentence, 
    "city" => specialist.addresses.first ? "#{specialist.addresses.first.city}" : "", 
    "status" => specialist.status_class,
    "wait_time" => specialist.waittime || "",
    "url" => url_for(specialist),
    "group_name" => "Specialists",
    "group_order" => 1 }
  search_data << entry
end

Clinic.all.each do |clinic|

  #this handles those that only belong to specializations that are "in progress", as well as orphaned entities
  next if clinic.specializations.length == 0
  
  entry = { 
    "name" => clinic.name, 
    "specialty" => clinic.specializations.collect{ |s| s.name }.to_sentence,
    "city" => clinic.addresses.first ? "#{clinic.addresses.first.city}" : "",  
    "status" => clinic.status_class,
    "wait_time" => clinic.waittime,
    "url" => url_for(clinic),
    "group_name" => "Clinics",
    "group_order" => 2 }
  search_data << entry
end

Hospital.all.each do |hospital|
  entry = { 
    "name" => hospital.name, 
    "specialty" => "", 
    "city" => hospital.addresses.first ? "#{hospital.addresses.first.city}" : "", 
    "status" => "none",
    "wait_time" => "",
    "url" => url_for(hospital),
    "group_name" => "Hospitals",
    "group_order" => 3 }
  search_data << entry
end

-%>
pathways_search_data = <%=search_data.to_json.html_safe %>
