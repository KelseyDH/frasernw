<% search_data = Array.new 

Specialization.all.each do |specialization|

  next if specialization.in_progress
  
  entry = { 
    "n" => specialization.name, 
    "sp" => "",
    "c" => "", 
    "st" => "",
    "wt" => "",
    "url" => url_for(specialization),
    "gn" => "Specialties",
    "go" => 5 }
  search_data << entry
end 

procedures = Procedure.includes(:procedure_specializations => :specialization)

procedures.each do |procedure|

  #this handles those that only belong to specializations that are "in progress", as well as orphaned entities
  next if procedure.procedure_specializations.reject{ |ps| ps.specialization.in_progress }.length == 0
  
  entry = { 
    "n" => procedure.full_name, 
    "sp" => procedure.procedure_specializations.reject{ |ps| ps.specialization.in_progress }.collect{ |ps| ps.specialization.name }.to_sentence,
    "c" => "", 
    "st" => "",
    "wt" => "",
    "url" => url_for(procedure),
    "gn" => "Areas of Practice",
    "go" => 4 }
  search_data << entry
end 

specialists = Specialist.includes(:specialist_specializations => :specialization, :specialist_offices => { :office => { :location => [{:address => :city}, {:hospital_in => {:location => { :address => :city}}}, {:clinic_in => {:location => [{:address => :city}, {:hospital_in => {:location => { :address => :city}}}]}}]}})

specialists.each do |specialist|

  #this handles those that only belong to specializations that are "in progress", as well as orphaned entities
  next if specialist.specialist_specializations.reject{ |ss| ss.specialization.blank? or ss.specialization.in_progress }.length == 0
  
  entry = { 
    "n" => specialist.name, 
    "sp" => specialist.specialist_specializations.reject{ |ss| ss.specialization.blank? or ss.specialization.in_progress }.collect{ |ss| ss.specialization.name }.to_sentence, 
    "c" => specialist.city,
    "st" => specialist.status_class,
    "wt" => specialist.waittime || "",
    "url" => url_for(specialist),
    "gn" => "Specialists",
    "go" => 1 }
  search_data << entry
end

clinics = Clinic.includes(:location => [{:address => :city}, {:hospital_in => {:location => { :address => :city}}}])

clinics.each do |clinic|

  #this handles those that only belong to specializations that are "in progress", as well as orphaned entities
  next if clinic.clinic_specializations.reject{ |cs| cs.specialization.in_progress }.length == 0
  
  entry = { 
    "n" => clinic.name, 
    "sp" => clinic.clinic_specializations.reject{ |cs| cs.specialization.in_progress }.collect{ |cs| cs.specialization.name }.to_sentence,
    "c" => clinic.city,
    "st" => clinic.status_class,
    "wt" => clinic.waittime,
    "url" => url_for(clinic),
    "gn" => "Clinics",
    "go" => 2 }
  search_data << entry
end

hospitals = Hospital.includes(:location => {:address => :city})

hospitals.each do |hospital|
  entry = { 
    "n" => hospital.name, 
    "sp" => "", 
    "c" => hospital.city, 
    "st" => "none",
    "wt" => "",
    "url" => url_for(hospital),
    "gn" => "Hospitals",
    "go" => 3 }
  search_data << entry
end

Language.all.each do |language|
  entry = { 
    "n" => language.name, 
    "sp" => "", 
    "c" => "", 
    "st" => "none",
    "wt" => "",
    "url" => url_for(language),
    "gn" => "Languages",
    "go" => 6 }
  search_data << entry
end


-%>
pathways_search_data = <%=search_data.to_json.html_safe %>
