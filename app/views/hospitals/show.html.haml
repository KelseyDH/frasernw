%script{"type" => "text/javascript"}
  :plain
    $(document).ready(function() {
      //sort by status then wait time
      $('.tablesorter').tablesorter({sortList: [[1,0],[2,0],[3,0]]});
    });
  
%h2= @hospital.name
  
- if @hospital.address.present? && !@hospital.address.empty?
  %p
    = link_to @hospital.address.address, @hospital.address.map_url, :target => "_blank"
- if (@hospital.phone_and_fax.present?)
  %p.collapse_up
    = @hospital.phone_and_fax

- has_specialists = @hospital.specialists.length > 0
- has_clinics = @hospital.clinics.length > 0
- has_specialist_offices = @hospital.specialist_offices.length > 0

- specialist_tab_class = has_specialists ? "active" : ""
- clinic_tab_class = (!has_specialists and has_clinics) ? "active" : ""
- specialist_offices_tab_class = (!has_specialists and !has_clinics) ? "active" : ""

.tabbable
  %ul.nav.nav-tabs
    - if has_specialists
      %li{:class => specialist_tab_class} 
        %a{"href" => "#specialist_tab", "data-toggle" => "tab"}
          %i.icon-user.icon-text
          Specialists with Hospital Privileges
    - if has_clinics
      %li{:class => clinic_tab_class}
        %a{"href" => "#clinic_tab", "data-toggle" => "tab"}
          %i.icon-user.icon-text
          Clinics in Hospital
    - if has_specialist_offices
      %li{:class => specialist_offices_tab_class}
        %a{"href" => "#specialist_offices_tab", "data-toggle" => "tab"} 
          %i.icon-envelope.icon-text
          Offices in Hospital

  .tab-content
    - if has_specialists
      #specialist_tab.tab-pane{:class => specialist_tab_class} 
        %table.table.table-condensed.tablesorter{:id => 'specialist_table'}
          %thead
            %tr{:class => 'tableheader'}
              %th{:class => "{sorter: 'bylastname'}"} Specialist
              %th{:class => "{sorter: 'text'}"} Specialty
              %th{:class => "{sorter: 'status'} status_column"} Accepting Patients?
              %th{:class => "{sorter: 'waittime'}"} Wait Time
              %th{:class => "{sorter: 'blanks_to_bottom'}"} City
          %tbody
            - (@hospital.specialists).each do |specialist|
              %tr{:class => specialist.responded ? "" : "not-responded"}
                %td
                  %a.ajax{"href" => specialist_path(specialist)}= specialist.name
                %td
                  %ul
                    - specialist.specializations.each do |s|
                      %li= s.name
                %td
                  %span{:class => "status_#{specialist.status_class}"}= specialist.status_class
                %td= specialist.waittime
                %td= specialist.city
          
    - if has_clinics
      #clinic_tab.tab-pane{:class => clinic_tab_class}
        %table.table.table-condensed{:class => 'tablesorter {sortlist: [[2,0],[3,0]]}', :id => 'clinic_table'}
          %thead
            %tr{:class => 'tableheader'}
              %th{:class => "{sorter: 'bylastname'} name_column"} Clinic
              %th{:class => "{sorter: 'text'}"} Specialty
              %th{:class => "{sorter: 'status'} status_column"} Accepting Patients?
              %th{:class => "{sorter: 'waittime'}"} Wait Time
              %th{:class => "{sorter: 'blanks_to_bottom'}"} City
          %tbody
            - (@hospital.clinics).each do |clinic|
              %tr
                %td
                  %a.ajax{"href" => clinic_path(clinic)}= clinic.name
                %td
                  %ul
                    - clinic.specializations.each do |s|
                      %li= s.name
                %td
                  %span{:class => "status_#{clinic.status_class}"}= clinic.status_class
                %td= clinic.waittime
                %td= clinic.city
          
    - if has_specialist_offices
      #specialist_offices_tab.tab-pane{:class => specialist_offices_tab_class}
        %table.table.table-condensed.tablesorter{:id => 'specialist_offices_table'}
          %thead
            %tr{:class => 'tableheader'}
              %th{:class => "{sorter: 'bylastname'}"} Specialist
              %th{:class => "{sorter: 'text'}"} Specialty
              %th{:class => "{sorter: 'status'} status_column"} Accepting Patients?
              %th{:class => "{sorter: 'waittime'}"} Wait Time
              %th{:class => "{sorter: 'blanks_to_bottom'}"} City
          %tbody
            - (@hospital.specialist_offices).each do |specialist|
              %tr{:class => specialist.responded ? "" : "not-responded"}
                %td
                  %a.ajax{"href" => specialist_path(specialist)}= specialist.name
                %td
                  %ul
                    - specialist.specializations.each do |s|
                      %li= s.name
                %td
                  %span{:class => "status_#{specialist.status_class}"}= specialist.status_class
                %td= specialist.waittime
                %td= specialist.city

%p.admin.btn-group
  - if can? :update, @hospital
    = link_to("<i class='icon-pencil'></i>".html_safe + " Edit", edit_hospital_path(@hospital), :class => "btn ajax")
  - if can? :destroy, @hospital
    = link_to("<i class='icon-trash'></i>".html_safe + " Delete", @hospital, :confirm => "Delete #{@hospital.name}?", :method => :delete, :class => "btn")
