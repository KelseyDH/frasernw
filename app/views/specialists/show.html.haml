- if @is_version
  = render 'versions/info'

%h2
  = @specialist.name
%h4.specialty_links
  = @specialist.specializations_including_in_progress.reject{ |s| s.in_progress and !current_user_is_admin? }.collect(){ |s| "<a href='#{specialization_path(s)}' class='#{ s.in_progress ? "in-progress ajax" : "ajax" }'>#{s.name}</a>" }.to_sentence.html_safe
    
- if @specialist.billing_number_padded.present? && @specialist.sex?
  %h5= "MSP ##{@specialist.billing_number_padded}, #{@specialist.sex}"
- elsif @specialist.billing_number_padded.present?
  %h5= "MSP ##{@specialist.billing_number_padded}"
- elsif @specialist.sex?
  %h5= @specialist.sex
  
- if not @specialist.responded
  %p
    This specialist has not yet provided Pathways their information
- else
    
  - @specialist.specialist_offices.each do |specialist_office|
    - next if specialist_office.empty?
    - if specialist_office.office.present?
      - num_specialists = specialist_office.office.num_specialists
      - location = specialist_office.office.location
      - next if !location
      - address = location.resolved_address
      - if (location.in_hospital? or location.in_clinic?)
        - located_in = location.hospital_in
        - located_in ||= location.clinic_in
        %p
          %span.address= "In #{link_to located_in.name, url_for(located_in), :class => 'ajax'}".html_safe
          - if located_in.location.present? && located_in.location.in_hospital?
            - hopsital = located_in.location.hospital_in
            = "which is in #{link_to hopsital.name, hospital_path(hopsital), :class => 'ajax'}".html_safe
          = "(#{specialist_office.sector.downcase})" if specialist_office.sector?
          - if num_specialists > 1
            with
            %a#tt{"href" => "#", "onclick" => "$('#tt').tooltip('toggle')", "rel" => "tooltip", "title" => "<ul>#{specialist_office.office.specialists.reject{|s| s.id == @specialist.id}.map{|s| "<li>#{link_to s.name, specialist_path(s), :class => 'ajax'}"}.join('').html_safe}</ul>" }= "#{pluralize(num_specialists-1, 'other')}"
        %p.collapse_up= link_to address.address, address.map_url, :target => "_blank" if address.present? && !address.empty?
        %p.collapse_up= location.in_details if location.in_details.present?
      - elsif address.present?
        %p
          %span.address= link_to address.address, address.map_url, :target => "_blank"
          = "(#{specialist_office.sector.downcase})" if specialist_office.sector?
          - if num_specialists > 1
            with
            %a#tt{"href" => "#", "onclick" => "$('#tt').tooltip('toggle')", "rel" => "tooltip", "title" => "<ul>#{specialist_office.office.specialists.reject{|s| s.id == @specialist.id}.map{|s| "<li>#{link_to s.name, specialist_path(s), :class => 'ajax'}"}.join('').html_safe}</ul>" }= "#{pluralize(num_specialists-1, 'other')}"
    %p.collapse_up= specialist_office.schedule.days.to_sentence if specialist_office.scheduled?
    %p.collapse_up= specialist_office.phone_and_fax if specialist_office.phone_and_fax.present?
      
  - if @specialist.direct_phone.present?
    %p.collapse_up
      Direct number 
      %em for physician use only:
      =@specialist.direct_phone
      - if @specialist.direct_phone_extension.present?
        = "ext. #{@specialist.direct_phone_extension}"

  %p
    %strong{ :class => "status_#{@specialist.status_class}"}= @specialist.status
    - if not @specialist.status_details.blank?
      %p.collapse_up
        %strong Details:
        = @specialist.status_details
    - if ((not @specialist.practise_limitations.blank?) and (not @specialist.retired?))
      %p.collapse_up
        %strong Limitations:
        = @specialist.practise_limitations
    - if ((not @specialist.location_opened.blank?) and (not @specialist.retired?))
      %p.collapse_up
        This practice opened at this location
        = @specialist.location_opened == "Prior to 2010" ? "#{@specialist.location_opened.downcase}." : "in #{@specialist.location_opened}."
  
  - if not @specialist.retired?
    - if not @specialist.languages.blank?
      %p
        %strong.language= @specialist.languages.map{ |x| x.name }.to_sentence
        - if @specialist.languages.count > 1
          are spoken at this practice
        - else
          is spoken at this practice
          
    .investigation  
      - if not @specialist.required_investigations.blank?
        %p
          %strong Required investigations for all patients:
          = @specialist.required_investigations
      - specialization_procedures, specialization_count = compressed_procedures_indented(@specialist, ProcedureSpecialization::CLASSIFICATION_FOCUSED)
      - if specialization_count > 0
        %p.collapse_up
          %strong Areas of practice
          \- with any 
          %i additional 
          required investigations:
          = specialization_procedures.html_safe
      - custom_procedures, custom_count = compressed_procedures_indented(@specialist, ProcedureSpecialization::CLASSIFICATION_NONFOCUSED)
      - if custom_count > 0
        %p.collapse_up
          %strong Other areas of interest
          \- with any 
          %i additional 
          required investigations:
          = custom_procedures.html_safe
      - if not @specialist.interest.blank?
        %p.collapse_up
          %strong Most interested in
          = @specialist.interest
      - if not @specialist.not_performed.blank?
        %p.collapse_up
          %strong Does not see or do
          = @specialist.not_performed

    %p
      - if @specialist.accepts_referrals_via.presence and @specialist.responds_via.presence
        %strong.referral Referrals:
        = "accepted by #{@specialist.accepts_referrals_via}. Responded to by #{@specialist.responds_via}."
      - elsif @specialist.accepts_referrals_via.presence
        %strong.referral Referrals:
        = "accepted by #{@specialist.accepts_referrals_via}."
      - elsif @specialist.responds_via.presence
        %strong.referral Referrals:
        = "responded to by #{@specialist.responds_via}."

    - if @specialist.referral_form_mask == 1
      %p.collapse_up This office has a referral form.
    - elsif @specialist.referral_form_mask == 2
      %p.collapse_up This office does not have a referral form.

    -if @specialist.waittime.presence
      %p.collapse_up
        Average patient wait time from referral to appointment:
        %strong= @specialist.waittime

    -if @specialist.lagtime.presence
      %p.collapse_up
        Average length of time to notify GP of a booking date:
        %strong= @specialist.lagtime
      
    - if @specialist.patient_can_book_mask == 1
      %p.collapse_up This office accepts direct calls from patients after referral to book their own appointments.
    - elsif @specialist.patient_can_book_mask == 2
      %p.collapse_up This office does not accept direct calls from patients after referral to book their own appointments.
      
    .red_flag
      - if not @specialist.red_flags.blank?
        %p
          %strong Red flags
          that this office feels warrant urgent consultation:
          = @specialist.red_flags
      - if not @specialist.urgent_referrals_via.blank?
        %p.collapse_up
          - if @specialist.red_flags.blank?
            %strong Urgent consulation 
          - else
            Urgent consulation
          = "should be referred via #{@specialist.urgent_referrals_via}"
      
    - if not @specialist.hospitals.blank?
      %p
        %strong.hospital Hospital privileges:
        != @specialist.hospitals.map{ |hospital| "<a href='#{hospital_path(hospital)}' class='ajax')\">#{hospital.name}</a>" }.to_sentence 

    - if not @specialist.clinics.blank?
      %p
        %strong.clinic Clinic associations:
        != @specialist.clinics.map{ |clinic| "<a href='#{clinic_path(clinic)}' class='ajax'>#{clinic.name}</a>" }.to_sentence
        
%script{"type" => "text/javascript"}
  :plain
    $(document).ready(function() { $('#tt').tooltip({trigger: 'manual'}) });
            
- if current_user_is_admin?
  - if not @specialist.controlling_users.blank?
    %p.admin
      %strong.control Users 
      that can edit this specialist:
      != @specialist.controlling_users.map{ |user| "<a href='#{user_path(user)}' class='ajax'>#{user.name}</a>" }.to_sentence

%p.admin.btn-group
  - if can? :update, @specialist
    = link_to("<i class='icon-pencil'></i>".html_safe + " Edit", edit_specialist_path(@specialist), :class => "btn ajax")
  - if current_user_is_admin?
    - if @specialist.review_item.present?
      = link_to("<i class='icon-list-alt'></i>".html_safe + " Review Pending Changes", specialist_review_path(@specialist), :class => "btn ajax")
    - else
      %a.btn{"href" => "#share", "data-toggle" => "collapse", "data-target" => "#share"}
        %i.icon-share
        Share
    = link_to("<i class='icon-folder-open'></i>".html_safe + " History", specialist_versions_path(@specialist), :class => "btn ajax")
  - if can? :destroy, @specialist
    = link_to("<i class='icon-trash'></i>".html_safe + " Delete", @specialist, :confirm => "Delete #{@specialist.name}?", :method => :delete, :class => "btn")

- if current_user_is_admin?
  #share.collapse
    %p
      .alert.alert-info
        %h3 Secret edit link
        %p Anyone can edit this specialist if they have the following secret address:
        %p= specialist_self_edit_path(@specialist, @specialist.token, :only_path => false)
        %p 
          You can:
          %ul
            - if @specialist.contact_email.presence
              %li
                Have Pathways
                = link_to "send and email", specialist_email_path(@specialist)
                = " with this link to #{@specialist.contact_name} (#{@specialist.contact_email}), the contact MOA for this specialist."
            %li 
              Manually
              = mail_to "", "Send an email", :subject => "Edit #{@specialist.name} on Pathways", :body => "#{specialist_self_edit_path(@specialist, @specialist.token, :only_path => false)}"
              with this link in to whomever you chose
            %li Copy and paste it into an email or document manually.
        - if @specialist.contacts.length > 0
          %p
            Contact history through Pathways:
            %ul
              = render @specialist.contacts
