- title "Pathways | #{@specialist.name}"

- if @is_version
  = render 'versions/info'
  
%h2
  = @specialist.name
  
  %a{"href" => "javascript:void(0)", "onclick" => "favorite('/favorites/specialists/#{@specialist.id}')", "title" => "Favourite / un-favourite"}
    - favorite_class = logged_in? ? (Favorite.find_by_user_id_and_favoritable_id_and_favoritable_type(current_user.id, @specialist.id, "Specialist").present? ? "icon-red" : "icon-text") : "icon-text"
    %i#user_favorite.icon-heart{:class => favorite_class }  
- cache(:action => 'show') do
    
  %h3.specialty_links
    = @specialist.specializations_including_in_progress.reject{ |s| s.in_progress and !current_user_is_admin? }.collect(){ |s| "<a href='#{specialization_path(s)}' class='#{ s.in_progress ? "in-progress ajax" : "ajax" }'>#{s.name}</a>" }.to_sentence.html_safe
      
  - if @specialist.sex? && @specialist.billing_number_padded.present?
    %h5= " #{@specialist.sex}, MSP ##{@specialist.billing_number_padded}"
  - elsif @specialist.sex?
    %h5= @specialist.sex
  - elsif @specialist.billing_number_padded.present?
    %h5= "MSP ##{@specialist.billing_number_padded}"
    
  - if @specialist.not_responded?

    %p.space.no_indent This specialist has not yet provided Pathways their information.
    
  - elsif @specialist.moved_away?

    %p.space.no_indent This specialist has moved away.
    
  - elsif @specialist.retired?

    %p.space.no_indent This specialist has retired.
    
  - elsif @specialist.purposely_not_yet_surveyed?

    %p.space.no_indent This specialist has purposely not yet been surveyed by Pathways. They may be out of our current catchment area, or in a speciality we have yet to fully survey.
    
  - elsif @specialist.hospital_or_clinic_only?

    - hospitals = @specialist.hospitals.present?
    - clinics = @specialist.clinics.present?
    
    - if hospitals && clinics
      %p.space.no_indent This specialist only works out of hospitals and clinics.
    - elsif clinics
      %p.space.no_indent This specialist only works out of clinics.
    - elsif hospitals
      %p.space.no_indent This specialist only works out of hospitals.
    - else
      %p.space.no_indent This specialist only works out of hospitals and clinics, but we do not yet have data on which ones.
      
    - if hospitals
      %p.space.no_indent
        %strong Hospital privileges:
        != @specialist.hospitals.map{ |hospital| "<a href='#{hospital_path(hospital)}' class='ajax')\">#{hospital.name}</a>" }.to_sentence 

    - if clinics
      %p.space.no_indent
        %strong Clinic associations:
        != @specialist.clinics.map{ |clinic| "<a href='#{clinic_path(clinic)}' class='ajax'>#{clinic.name}</a>" }.to_sentence
        
  - else

    %p.space.no_indent
      %strong{ :class => "status_#{@specialist.status_class}"}= @specialist.status.end_with_period
    - if @specialist.status_details.present?
      %p
        %strong Details:
        = @specialist.status_details.end_with_period
    - if @specialist.practise_limitations.present?
      %p
        %strong Limitations:
        = @specialist.practise_limitations.end_with_period
        
    - has_office = false
    - @specialist.specialist_offices.each do |specialist_office|
      - has_office = true if not specialist_office.empty?
      
    - if has_office || @specialist.location_opened.present? || @specialist.languages.present?
    
      %h6.address Office Information
      
      - @specialist.specialist_offices.each do |specialist_office|
        - next if specialist_office.empty?
        - if specialist_office.office.present?
          - num_specialists = specialist_office.office.num_specialists
          - location = specialist_office.office.location
          - next if !location
          - address = location.resolved_address
          - if (location.in_hospital? or location.in_clinic?)
            - located_in = location.hospital_in
            - located_in ||= location.clinic_in
            %p.space
              = "In #{link_to located_in.name, url_for(located_in), :class => 'ajax'}".html_safe
              - if located_in.location.present? && located_in.location.in_hospital?
                - hopsital = located_in.location.hospital_in
                = "which is in #{link_to hopsital.name, hospital_path(hopsital), :class => 'ajax'}".html_safe
              = "(#{specialist_office.sector})" if specialist_office.sector?
              - if num_specialists > 1
                with
                %a.tt{"id" => "tt#{specialist_office.office.id}", "href" => "#", "onclick" => "$('#tt#{specialist_office.office.id}').tooltip('toggle')", "rel" => "tooltip", "title" => "<ul>#{specialist_office.office.specialists.reject{|s| s.id == @specialist.id}.map{|s| "<li>#{link_to s.name, specialist_path(s), :class => 'ajax'}"}.join('').html_safe}</ul>" }= "#{pluralize(num_specialists-1, 'other specialist')}"
            %p= link_to address.address, address.map_url, :target => "_blank" if address.present? && !address.empty?
            %p= location.in_details if location.in_details.present?
          - elsif address.present?
            %p.space
              = link_to address.address, address.map_url, :target => "_blank"
              = "(#{specialist_office.sector})" if specialist_office.sector?
              - if num_specialists > 1
                with
                %a.tt{"id" => "tt#{specialist_office.office.id}", "href" => "#", "onclick" => "$('#tt#{specialist_office.office.id}').tooltip('toggle')", "rel" => "tooltip", "title" => "<ul>#{specialist_office.office.specialists.reject{|s| s.id == @specialist.id}.map{|s| "<li>#{link_to s.name, specialist_path(s), :class => 'ajax'}"}.join('').html_safe}</ul>" }= "#{pluralize(num_specialists-1, 'other specialist')}"
        %p= specialist_office.phone_and_fax if specialist_office.phone_and_fax.present?
        - if specialist_office.direct_info.present?
          %p
            Direct number 
            %em for physician use only:
            =specialist_office.direct_info
            
      - if @specialist.location_opened.present?
        %p.space
          This practice opened at this location
          = @specialist.location_opened == "Prior to 2010" ? "#{@specialist.location_opened.downcase}." : "in #{@specialist.location_opened}."
      
      - if @specialist.languages.present?
        %p.space
          = @specialist.languages.map{ |x| "<a class='ajax' href='#{language_path(x)}'>#{x.name}</a>" }.to_sentence.html_safe
          = "#{@specialist.languages.count == 1 ? 'is' : 'are' } spoken at this practice."
    
    - specialization_procedures, specialization_count, specialization_has_investigations = compressed_procedures_indented(@specialist, ProcedureSpecialization::CLASSIFICATION_FOCUSED)
    - custom_procedures, custom_count, custom_has_investigations = compressed_procedures_indented(@specialist, ProcedureSpecialization::CLASSIFICATION_NONFOCUSED)
    - if @specialist.required_investigations.present? || specialization_count > 0 || custom_count > 0 || @specialist.interest.present? || @specialist.not_performed.present?
      %h6.procedure Areas of Practice
            
      .investigation  
        - if @specialist.required_investigations.present?
          %p
            %strong Required investigations for all patients:
            = @specialist.required_investigations.end_with_period
        - if specialization_count > 0
          %p.space
            %strong Areas of practice:
            - if specialization_has_investigations
              with any 
              %i additional 
              required investigations
            .list
              = specialization_procedures.html_safe
        - if custom_count > 0
          %p.space
            %strong Other areas of interest:
            - if custom_has_investigations
              with any 
              %i additional 
              required investigations
            .list
              = custom_procedures.html_safe
        - if @specialist.interest.present?
          %p.space
            %strong Most interested in:
            = @specialist.interest.end_with_period
        - if @specialist.not_performed.present?
          %p.space
            %strong Does not see or do:
            = @specialist.not_performed.end_with_period
    
    - if @specialist.accepts_referrals_via.present? || @specialist.responds_via.present? || @specialist.referral_form_mask != 3 || @specialist.waittime.present? || @specialist.lagtime.present? || @specialist.patient_can_book_mask != 3
    
      %h6.referral Referrals

      - if @specialist.accepts_referrals_via.present?
        %p
          %strong Accepted by:
          = @specialist.accepts_referrals_via.html_safe
      - if @specialist.responds_via.present?
        %p
          %strong Responded to by:
          = @specialist.responds_via

      - if @specialist.referral_form_mask == 1
        - referral_form_count = @specialist.referral_forms.reject{|referral_form| not referral_form.form.present?}.length
        %p
          %strong Referral form:
          yes.
        %ul.referral_forms
          - @specialist.referral_forms.each do |referral_form|
            - next if not referral_form.form.present?
            - type = referral_form.form_content_type.split('/').last
            %li= link_to "#{referral_form.description} (#{type})", referral_form.form.url, :target => "_blank"
      - elsif @specialist.referral_form_mask == 2
        %p 
          %strong Referral form:
          no.

      -if @specialist.waittime.present?
        %p.space
          Average non-urgent patient wait time from referral to appointment:
          %strong= @specialist.waittime

      -if @specialist.lagtime.present?
        %p
          Average length of time to notify GP of a booking date:
          %strong= @specialist.lagtime
        
      - if @specialist.patient_can_book_mask == 1
        %p This office accepts direct calls from patients after referral to book their own appointments.
      - elsif @specialist.patient_can_book_mask == 2
        %p This office does not accept direct calls from patients after referral to book their own appointments.
    
    - if @specialist.red_flags.present? || @specialist.urgent_referrals_via.present?
      %h6.urgent_referral Urgent Referrals
      
      - if @specialist.urgent_referrals_via.present?
        %p
          %strong Accepted by: 
          = @specialist.urgent_referrals_via
        
      - if @specialist.red_flags.present?
        %p
          %strong Red flags
          that this office feels warrant urgent consultation:
          = @specialist.red_flags.end_with_period
      
      - if @specialist.patient_instructions.present? || @specialist.cancellation_policy.present?
        %h6.patient_information Patient Information
        
        -if @specialist.patient_instructions.present?
          %p
            %strong Patient instructions:
            = @specialist.patient_instructions.end_with_period
        -if @specialist.cancellation_policy.present?
          %p
            %strong Cancellation policy:
            = @specialist.cancellation_policy.end_with_period
    
    - if @specialist.hospitals.present? || @specialist.clinics.present?
      %h6.association Associations
      
      - if @specialist.hospitals.present?
        %p
          %strong Hospital privileges:
          != @specialist.hospitals.map{ |hospital| "<a href='#{hospital_path(hospital)}' class='ajax')\">#{hospital.name}</a>" }.to_sentence 

      - if @specialist.clinics.present?
        %p
          %strong Clinic associations:
          != @specialist.clinics.map{ |clinic| "<a href='#{clinic_path(clinic)}' class='ajax'>#{clinic.name}</a>" }.to_sentence
          
    .btn-group
      %a.btn{"href" => specialist_patient_information_path(@specialist), "target" => "_blank"}
        %i.icon-print.icon-text
        Print Information for Patient
      %a.btn{"href" => "javascript:void(0)", "onclick" => "$('#feedback').fadeIn(200)"}
        %i.icon-exclamation-sign.icon-text
        Incorrect Information? Let us know
        
    #feedback
                
      = simple_form_for @feedback, :html => { :class => "ajax" } do |f|

        = f.input :feedback, :label => "Please provide us with any updates to #{@specialist.name}'s information"
        = f.input :item_type, :as => :hidden, :value => "Specialist"
        = f.input :item_id, :as => :hidden, :value => @specialist.id

        .form-actions
          = f.button :submit, :class => "btn btn-primary", :value => "Send Feedback"
          %a.btn.btn-danger{"href" => "javascript:void(0)", "onclick" => "$('#feedback').fadeOut(200)"} Cancel
          
  %script{"type" => "text/javascript"}
    :plain
      $(document).ready(function() { $('.tt').tooltip({trigger: 'manual'}) });
              
- if current_user_is_admin?
  - if @specialist.controlling_users.present?
    %p.admin
      %strong.control Users 
      that can edit this specialist:
      != @specialist.controlling_users.map{ |user| "<a href='#{user_path(user)}' class='ajax'>#{user.name}</a>" }.to_sentence

%p.admin.btn-group
  - if can? :update, @specialist
    = link_to("<i class='icon-pencil'></i>".html_safe + " Edit Specialist", edit_specialist_path(@specialist), :class => "btn ajax")
    = link_to("<i class='icon-file'></i>".html_safe + " Referral Forms", specialist_referral_forms_path(@specialist), :class => "btn ajax")
  - if current_user_is_admin?
    - if @specialist.review_item.present?
      = link_to("<i class='icon-list-alt'></i>".html_safe + " Review Pending Changes", specialist_review_path(@specialist), :class => "btn ajax")
    - else
      %a.btn{"href" => "javascript:void(0)", "data-toggle" => "collapse", "data-target" => "#share"}
        %i.icon-share
        Share
    = link_to("<i class='icon-folder-open'></i>".html_safe + " History", specialist_versions_path(@specialist), :class => "btn ajax")
  - if can? :destroy, @specialist
    = link_to("<i class='icon-trash'></i>".html_safe + " Delete Specialist", @specialist, :confirm => "Delete #{@specialist.name}?", :method => :delete, :class => "btn")

- if current_user_is_admin?
  #share.collapse
    %p
      .alert.alert-info
        %h3 Secret edit link
        %p Anyone can edit this specialist if they have the following secret address:
        %p= specialist_self_edit_path(@specialist, @specialist.token, :only_path => false)
        -#
          %p 
            You can:
            %ul
              - if @specialist.contact_email.present?
                %li
                  Have Pathways
                  = link_to "send and email", specialist_email_path(@specialist)
                  = " with this link to #{@specialist.contact_name} (#{@specialist.contact_email}), the contact MOA for this specialist."
              %li 
                Manually
                = mail_to "", "Send an email", :subject => "Edit #{@specialist.name} on Pathways", :body => "#{specialist_self_edit_path(@specialist, @specialist.token, :only_path => false)}"
                with this link in to whomever you chose
              %li Copy and paste it into an email or document manually.
          - if @specialist.contacts.length > 0
            %p
              Contact history through Pathways:
              %ul
                = render @specialist.contacts
