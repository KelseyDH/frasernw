- title "Pathways | #{@specialization.name}"
    
%ul#specialties-menu
  %li.dropdown
    %a.specialties-dropdown-toggle{"href" => "javascript:void(0)"}
      Specialties
      %b.caret
  %li.subsequent{:class =>  @specialization.in_progress && "in-progress"}= @specialization.name
  
%script{"type" => "text/javascript"}
  :plain
    var $el = $('a.specialties-dropdown-toggle').on('click.specialties-dropdown-toggle', function () { $('#specialties-dropdown-menu').toggle(); $('#specialties-menu li.subsequent').toggleClass('border'); return false; });
    $('html').on('click.specialties-dropdown-toggle', function () { $('#specialties-dropdown-menu').hide() });
    
#specialties-dropdown-menu
  .inner
    - specializations = Specialization.all.reject{ |s| s.in_progress && !current_user_is_admin? }
    - first = specializations[0, (specializations.length / 4.0).ceil]
    - second = (specializations - first)[0, ((specializations.length - first.length) / 3.0).ceil]
    - third = (specializations - first - second)[0, ((specializations.length - first.length - second.length) / 2.0).ceil]
    - fourth = specializations - first - second - third
    
    - [first, second, third, fourth].each do |list|
      %ul
        - list.each do |specialization|
          %li
            %a.ajax{"href" => specialization_path(specialization), :class => specialization.in_progress ? "in-progress" : ""}= specialization.name

- has_specialists = @specialization.specialists.length > 0
- has_clinics = @specialization.clinics.length > 0

- specialist_tab_class = has_specialists ? "active" : ""
- clinic_tab_class = has_specialists ? "" : "active"

.tabbable
  %ul#content_tabs.nav.nav-tabs
    - if has_specialists
      %li{:class => specialist_tab_class} 
        %a#specialists{"href" => "#specialist_tab", "data-toggle" => "tab"}
          %span Specialists
    - if has_clinics
      %li{:class => clinic_tab_class}
        %a#clinics{"href" => "#clinic_tab", "data-toggle" => "tab"}
          %span Clinics
    - ScCategory.specialty.each do |sc_category|
      - if sc_category.sc_items.for_specialization(@specialization).present?
        %li
          %a{"href" => "##{sc_category.name.remove_whitespace}_tab", "id" => sc_category.name.remove_whitespace, "data-toggle" => "tab"}
            %span= sc_category.name
  
  .content-wrapper
  
    - cache(specialization_path(@specialization)) do

      %script{"type" => "text/javascript"}
        $(document).ready(function() {
        - @specialization.specialists.each do |s|
          - next if not s.show_in_table?
          $('#s#{s.id}').data('filter', '#{specialist_filtering_attributes(s, false).join(' ')}');
          
        - other_specialists = other_specialists(@specialization)
        - other_specialists.each do |s|
          - next if not s.show_in_table?
          $('#specialist_table').data('s#{s.id}', '#{specialist_filtering_attributes(s, true).join(' ')}');
          $('#specialist_table').data('s#{s.id}_name', '#{escape_javascript(s.name)}');
          $('#specialist_table').data('s#{s.id}_specialties', '#{escape_javascript(s.specializations.map{|sp| sp.name}.to_sentence)}');
          $('#specialist_table').data('s#{s.id}_status', '#{escape_javascript(s.status_class)}');
          $('#specialist_table').data('s#{s.id}_wait_time', '#{escape_javascript(s.waittime)}');
          $('#specialist_table').data('s#{s.id}_city', '#{escape_javascript(s.city)}');
        $('#specialist_table').data('filter', '#{other_specialists.map{ |s| s.id }.join(' ')}');
        
        - @specialization.clinics.each do |c|
          - next if not c.show_in_table?
          $('#c#{c.id}').data('filter', '#{clinic_filtering_attributes(c).join(' ')}');
        });
    
      .tab-content
        - if has_specialists
          #specialist_tab.tab-pane{:class => specialist_tab_class} 
          
            .content
              .row
                .span8half
                  #specialist_phrase.filter-phrase
                          
                  #specialist_others.other-phrase
                          
                  #specialist_hide_others.other-phrase
                    %a{"href" => "javascript:void(0)", "onclick" => "hide_others('specialist')"}Hide
                    results from other specialties.
                
                  %table.table.table-condensed.tablesorter#specialist_table
                    %thead
                      %tr{:class => 'tableheader'}
                        %th.sp{:class => "{sorter: 'bylastname'} name_column"} Specialist
                        %th.st{:class => "{sorter: 'status'} status_column"} Accepting New<br>Patients?
                        %th.wt{:class => "{sorter: 'waittime'} wait_time_column"} Average Non-<br>Urgent Patient<br>Wait Time
                        %th.c{:class => "{sorter: 'blanks_to_bottom'} city_column"} City
                    %tbody
                      - (@specialization.specialists).each do |specialist|
                        - next if not specialist.show_in_table?
                        %tr{:class => specialist.disabled_in_table? && "disabled", :id => "s#{specialist.id}"}
                          %td.sp
                            %a.ajax{"href" => specialist_path(specialist)}= specialist.name
                          %td.st
                            %span{:class => "status_#{specialist.status_class}"}= specialist.status_class_hash
                          %td.wt= specialist.waittime
                          %td.c
                            %ul
                              - specialist.cities.each do |city|
                                %li= city
                          
                  #specialist_assumed_list
                    - if @specialization.procedure_specializations.assumed.reject{ |ps| ps.parent.present? }.present?
                      %i.icon-asterisk.icon-disabled.icon-small
                      Areas of practice we assume all #{@specialization.member_name.uncapitalize_first_letter.pluralize} see:
                      = @specialization.procedure_specializations.assumed.reject{ |ps| ps.parent.present? }.sort{ |a,b| a.procedure.name <=> b.procedure.name }.map{ |ps| ps.procedure.name.uncapitalize_first_letter }.to_sentence
                      
                .span3.offsethalf
                  .well.filter
                    .title
                      Filter Specialists
                    - if @specialization.procedure_specializations.non_assumed.present?
                      .filter-group
                        %a.filter-group-title.open{"data-toggle" => "collapse", "href" => "#specialist-filter-aop"}
                          Areas of Practice
                          - if @specialization.procedure_specializations.assumed.present?
                            %sup
                              %i.icon-asterisk.icon-disabled.icon-small
                        #specialist-filter-aop.collapsable.in
                          .filter-group-content
                            - @specialization.focused_procedure_specializations_arranged.each do |ps, children|
                              - next if ps.procedure.all_specialists.blank?
                              %label
                                %input.sp{"type" => "checkbox", "id" => "sp#{ps.procedure.id}_", "onclick" => "$('#children_sp#{ps.procedure.id}_').collapse('toggle')"}= ps.procedure.name
                              - next if children.length == 0
                              .collapse{:id => "children_sp#{ps.procedure.id}_"}
                                %script{"type" => "text/javascript"}
                                  :plain
                                    $(document).ready(function() {
                                      $('#children_sp#{ps.procedure.id}_').collapse({toggle: false}); 
                                    });
                                - parent_id = ps.procedure.id
                                - children.each do |ps, children|
                                  - next if ps.procedure.all_specialists.blank?
                                  %label.indent
                                    %input.sp{"type" => "checkbox", "id" => "sp#{ps.procedure.id}_", "class" => "child_sp#{parent_id}_"}= ps.procedure.name
                            
                            - non_focused_procedure_specializations = @specialization.non_focused_procedure_specializations_arranged
                            - has_more = false
                            - non_focused_procedure_specializations.each do |ps, children|
                              - has_more = true if not ps.procedure.all_specialists.blank?
                              - break if has_more
                            
                            - if has_more
                              %a.more#specialist_procedures_more{"href" => "javascript:void(0)", "data-toggle" => "collapse", "data-target" => "#more_specialist_procedures"} More...
                              %script{"type" => "text/javascript"}
                                :plain
                                  $(document).ready(function() {
                                    $('#more_specialist_procedures').on('show', function() {
                                      $('#specialist_procedures_more').html('Less...');
                                    });
                                    $('#more_specialist_procedures').on('hide', function() {
                                      $('#specialist_procedures_more').html('More...');
                                    });
                                  });
                        
                              #more_specialist_procedures.more.collapse
                                - non_focused_procedure_specializations.each do |ps, children|
                                  - next if ps.procedure.all_specialists.blank?
                                  %label
                                    %input.sp{"type" => "checkbox", "id" => "sp#{ps.procedure.id}_"}= ps.procedure.name
                                  - next if children.length == 0
                                  .collapse{:id => "children_sp#{ps.procedure.id}_"}
                                    %script{"type" => "text/javascript"}
                                      :plain
                                        $(document).ready(function() {
                                          $('#children_sp#{ps.procedure.id}_').collapse({toggle: false}); 
                                        });
                                    - parent_id = ps.procedure.id
                                    - children.each do |ps, children|
                                      - next if ps.procedure.all_specialists.blank?
                                      %label.indent
                                        %input.sp{"type" => "checkbox", "id" => "sp#{ps.procedure.id}_", "class" => "child_sp#{parent_id}_"}= ps.procedure.name
                                  
                    .filter-group
                      %a.filter-group-title.open{"data-toggle" => "collapse", "href" => "#specialist-filter-referral"}
                        Referrals
                      #specialist-filter-referral.collapsable.in
                        .filter-group-content
                          %label
                            %input#srph.sr{"type" => "checkbox"} Accepted via phone
                          %label.indent
                            Responded to within:
                            %select.sc
                              %option{"value" => 0} Any timeframe
                              - Specialist::LAGTIME_HASH.each do |lag_index, lag_value|
                                %option{"value" => "sc#{lag_index}_"}= lag_value
                          %label
                            %input#srpb.sr{"type" => "checkbox"} Patients can call to book after referral
        
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-sex"}
                        Sex
                      #specialist-filter-sex.collapsable.collapse
                        .filter-group-content
                          %label.half
                            %input#ssm.ss{"type" => "checkbox"} Male
                          %label.half
                            %input#ssf.ss{"type" => "checkbox"} Female
                        
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-schedule"}
                        Schedule
                      #specialist-filter-schedule.collapsable.collapse
                        .filter-group-content
                          %label.half
                            %input.ssh{"type" => "checkbox", "id" => "sshsat"} Saturday
                          %label.half
                            %input.ssh{"type" => "checkbox", "id" => "sshsun"} Sunday
                  
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-language"}
                        Languages
                      #specialist-filter-language.collapsable.collapse
                        .filter-group-content
                          %label
                            %input#si.si{"type" => "checkbox"} Interpreter available
                          - Language.all.each do |l|
                            %label.half
                              %input.sl{"type" => "checkbox", "id" => "sl#{l.id}_"}= l.name
                            
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#specialist-filter-association"}
                        Associations
                      #specialist-filter-association.collapsable.collapse
                        .filter-group-content
                          - if @specialization.clinics.present?
                            %label.indent
                              Clinic:
                              %select.sa
                                %option{"value" => 0} Any
                                - @specialization.clinics.each do |c|
                                  %option{"value" => "sac#{c.id}_"}= c.name
                          %label.indent
                            Hospital:
                            %select.sa
                              %option{"value" => 0} Any
                              - Hospital.all.each do |h|
                                %option{"value" => "sah#{h.id}_"}= h.name

                %script{"type" => "text/javascript"}
                  :plain
                    $(document).ready(function() {
                      var update_custom_specialist_table = function()
                      {
                        update_table('s', 'specialist', '#{@specialization.member_name.uncapitalize_first_letter.pluralize}');
                      }
                      $('.sp, .sc, .sr, .ss, .si, .ssh, .sl, .sa').click( update_custom_specialist_table );
                    });
              
        - if has_clinics
          #clinic_tab.tab-pane{:class => clinic_tab_class}
          
            .content
              .row
                .span8half
                  #clinic_phrase.filter-phrase
                    
                  %table.table.table-condensed.tablesorter#clinic_table
                    %thead
                      %tr{:class => 'tableheader'}
                        %th.sp{:class => "{sorter: 'text'} name_column"} Clinic
                        %th.st{:class => "{sorter: 'status'} status_column"} Accepting New<br>Patients?
                        %th.wt{:class => "{sorter: 'waittime'} wait_time_column"} Average Non-<br>Urgent Patient<br>Wait Time
                        %th.c{:class => "{sorter: 'blanks_to_bottom'} city_column"} City
                    %tbody
                      - (@specialization.clinics).each do |clinic|
                        - next if not clinic.show_in_table?
                        %tr{:class => clinic.disabled_in_table? && "disabled", :id => "c#{clinic.id}"}
                          %td.sp
                            %a.ajax{"href" => clinic_path(clinic)}= clinic.name
                          %td.st
                            %span{:class => "status_#{clinic.status_class}"}= clinic.status_class_hash
                          %td.wt= clinic.waittime
                          %td.c= clinic.city
                          
                .span3.offsethalf
                  .well.filter
                    .title
                      Filter Clinics
                    .filter-group
                      %a.filter-group-title.open{"data-toggle" => "collapse", "href" => "#clinic-filter-aop"}
                        Areas of Practice
                      #clinic-filter-aop.collapsable.in
                        .filter-group-content
                          - @specialization.focused_procedure_specializations_arranged.each do |ps, children|
                            - next if ps.procedure.all_clinics.blank?
                            %label
                              %input.cp{"type" => "checkbox", "id" => "cp#{ps.procedure.id}_", "onclick" => "$('#children_cp#{ps.procedure.id}_').collapse('toggle')"}= ps.procedure.name
                            - next if children.length == 0
                            .collapse{:id => "children_cp#{ps.procedure.id}_"}
                              %script{"type" => "text/javascript"}
                                :plain
                                  $(document).ready(function() {
                                    $('#children_cp#{ps.procedure.id}_').collapse({toggle: false}); 
                                  });
                              - parent_id = ps.procedure.id
                              - children.each do |ps, children|
                                - next if ps.procedure.all_clinics.blank?
                                %label.indent
                                  %input.cp{"type" => "checkbox", "id" => "cp#{ps.procedure.id}_", "class" => "child_cp#{parent_id}_"}= ps.procedure.name
                          
                          - non_focused_procedure_specializations = @specialization.non_focused_procedure_specializations_arranged
                          - has_more = false
                          - non_focused_procedure_specializations.each do |ps, children|
                            - has_more = true if not ps.procedure.all_clinics.blank?
                            - break if has_more
                          
                          - if has_more
                            %a.more#clinic_procedures_more{"href" => "javascript:void(0)", "data-toggle" => "collapse", "data-target" => "#more_clinic_procedures"} More...
                            %script{"type" => "text/javascript"}
                              :plain
                                $(document).ready(function() {
                                  $('#more_clinic_procedures').on('show', function() {
                                    $('#clinic_procedures_more').html('Less...');
                                  });
                                  $('#more_clinic_procedures').on('hide', function() {
                                    $('#clinic_procedures_more').html('More...');
                                  });
                                });
                      
                            #more_clinic_procedures.more.collapse
                              - non_focused_procedure_specializations.each do |ps, children|
                                - next if ps.procedure.all_clinics.blank?
                                %label
                                  %input.cp{"type" => "checkbox", "id" => "cp#{ps.procedure.id}_", "onclick" => "$('#children_cp#{ps.procedure.id}').collapse('toggle')"}= ps.procedure.name
                                - next if children.length == 0
                                .collapse{:id => "children_cp#{ps.procedure.id}"}
                                  %script{"type" => "text/javascript"}
                                    :plain
                                      $(document).ready(function() {
                                        $('#children_cp#{ps.procedure.id}').collapse({toggle: false}); 
                                      });
                                  - parent_id = ps.procedure.id
                                  - children.each do |ps, children|
                                    - next if ps.procedure.all_clinics.blank?
                                    %label.indent
                                      %input.cp{"type" => "checkbox", "id" => "cp#{ps.procedure.id}_", "class" => "child_cp#{parent_id}"}= ps.procedure.name
                                
                    .filter-group
                      %a.filter-group-title.open{"data-toggle" => "collapse", "href" => "#clinic-filter-referral"}
                        Referrals
                      #clinic-filter-referral.collapsable.in
                        .filter-group-content
                          %label
                            %input#crph.cr{"type" => "checkbox"} Accepted via phone
                          %label.indent
                            Responded to within:
                            %select.cc
                              %option{"value" => 0} Any timeframe
                              - Clinic::LAGTIME_HASH.each do |lag_index, lag_value|
                                %option{"value" => "csc#{lag_index}_"}= lag_value
                          %label
                            %input#crpb.cr{"type" => "checkbox"} Patients can call to book after referral
      
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-details"}
                        Clinic Details
                      #clinic-filter-details.collapsable.collapse
                        .filter-group-content
                          %label.half
                            %input#cdpb.cd{"type" => "checkbox"} Public
                          %label.half
                            %input#cdpv.cd{"type" => "checkbox"} Private
                          %label
                            %input.cd{"type" => "checkbox", "id" => "cdwa"} Wheelchair Accessible
                        
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-schedule"}
                        Schedule
                      #clinic-filter-schedule.collapsable.collapse
                        .filter-group-content
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshmon"} Monday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshtues"} Tuesday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshwed"} Wednesday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshthurs"} Thursday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshfri"} Friday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshsat"} Saturday
                          %label
                            %input.csh{"type" => "checkbox", "id" => "cshsun"} Sunday
                        
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-healthcare-providers"}
                        Care Providers
                      #clinic-filter-healthcare-providers.collapsable.collapse
                        .filter-group-content
                          - HealthcareProvider.all.each do |h|
                            %label
                              %input.ch{"type" => "checkbox", "id" => "ch#{h.id}_"}= h.name
                  
                    .filter-group
                      %a.filter-group-title.closed{"data-toggle" => "collapse", "href" => "#clinic-filter-language"}
                        Languages
                      #clinic-filter-language.collapsable.collapse
                        .filter-group-content
                          %label
                            %input#ci.ci{"type" => "checkbox"} Interpreter available
                          - Language.all.each do |l|
                            %label.half
                              %input.cl{"type" => "checkbox", "id" => "cl#{l.id}_"}= l.name

                %script{"type" => "text/javascript"}
                  :plain
                    $(document).ready(function() {
                      $('.cp, .cc, .cr, .cd, .csh, .ch, .ci, .cl').click( update_clinic_table );
                    });

        %script{"type" => "text/javascript"}
          :plain
            $('.collapsable').on('shown', function() {
              $(this).siblings('.filter-group-title').removeClass('closed').addClass('open');
            });
            $('.collapsable').on('hidden', function() {
              $(this).siblings('.filter-group-title').removeClass('open').addClass('closed');
            });
      
        - ScCategory.specialty.each do |sc_category|
          - if sc_category.sc_items.for_specialization(@specialization).present?
            .tab-pane{"id" => "#{sc_category.name.remove_whitespace}_tab"}
              - link_items = sc_category.sc_items.for_specialization(@specialization).reject{ |item| item.markdown? && item.inline? }
              - if link_items.present?
                %ul.scm
                  - link_items.each do |sc_item|
                    - if sc_item.markdown? 
                      %li
                        %ul.content-link
                          %li= link_to sc_item.title, sc_item, :class => "ajax"
                          %li
                            %span.format= sc_item.format
                            %span.domain= sc_item.domain
                    - else
                      %li
                        %ul.content-link
                          %li= link_to(sc_item.title, sc_item.link? ? sc_item.url : sc_item.document.url, :target => "_blank")
                          %li
                            %span.format= sc_item.format
                            %span.domain= sc_item.domain
  
              - sc_category.sc_items.for_specialization(@specialization).reject{ |item| !item.markdown? || !item.inline? }.each do |sc_item|
                .scm
                  %h1{:class => sc_item.shared_care? && "shared_care"}= sc_item.title
                  = BlueCloth.new(sc_item.markdown_content).to_html.html_safe
                  
              %hr
              = link_to "<i class='icon-arrow-right icon-blue'></i> Browse #{sc_category.name} content from all specialties".html_safe, sc_category_path(sc_category), :class => 'ajax'
      
      - tab_javascript = ""
      - ScCategory.specialty.each do |sc_category|
        - tab_javascript += "else if (hash == '##{sc_category.name.remove_whitespace}') { $('#content_tabs a##{sc_category.name.remove_whitespace}').tab('show'); } "
        
      %script{"type" => "text/javascript"}
        :plain
          $(document).ready(function() {
            $('#specialist_table').tablesorter({sortList: [[1,0],[2,0],[3,0]]});
            $('#clinic_table').tablesorter({sortList: [[0,0],[1,0],[2,0],[3,0]]});
            //flip to a tab if appropriate
            var hash = window.location.hash;
            console.log(hash);
            if (hash == '#specialists')
            {
              $('#content_tabs a#specialists').tab('show');
            }
            else if (hash == '#clinics')
            {
              $('#content_tabs a#clinics').tab('show');
            }
            #{tab_javascript}
            //make full rows clickable
            $('table tr').click( function() { $(this).find('a').click(); });
            $('table a').click( function(e) { e.stopPropagation(); });
          });
            
    %p.admin.btn-group
      - if can? :update, @specialization
        = link_to("<i class='icon-pencil'></i>".html_safe + " Edit Specialty", edit_specialization_path(@specialization), :class => "btn ajax")
      - if can? :destroy, @specialization
        = link_to("<i class='icon-trash'></i>".html_safe + " Delete Specialty", @specialization, :confirm => "Delete #{@specialization.name}?", :method => :delete, :class => "btn")
      - if can? :update, @specialization
        = link_to("<i class='icon-plus-sign'></i>".html_safe + " New Specialist", new_specialization_specialist_path(@specialization), :class => "btn ajax")
        = link_to("<i class='icon-plus-sign'></i>".html_safe + " New Clinic", new_specialization_clinic_path(@specialization), :class => "btn ajax")
        = link_to("<i class='icon-plus-sign'></i>".html_safe + " New Area of Practice", new_specialization_procedure_path(@specialization), :class => "btn ajax")
