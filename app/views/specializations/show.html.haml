- title "Pathways | #{@specialization.name}"

%script{"type" => "text/javascript"}
  :plain
    $(document).ready(function() {
      //sort by status then wait time
      $('.tablesorter').tablesorter({sortList: [[1,0],[2,0]]});
    });
  
%h2= @specialization.name

- if @specialization.in_progress
  %h4{:class => @specialization.in_progress ? "in-progress" : ""} In Progress

- has_specialists = @specialization.specialists.length > 0
- has_clinics = @specialization.clinics.length > 0

- specialist_tab_class = has_specialists ? "active" : ""
- clinic_tab_class = has_specialists ? "" : "active"

.tabbable
  %ul.nav.nav-tabs
    - if has_specialists
      %li{:class => specialist_tab_class} 
        %a{"href" => "#specialist_tab", "data-toggle" => "tab"} 
          %i.icon-user.icon-text
          Specialists
    - if has_clinics
      %li{:class => clinic_tab_class}
        %a{"href" => "#clinic_tab", "data-toggle" => "tab"}
          %i.icon-home.icon-text
          Clinics

  .tab-content
    #specialist_tab.tab-pane{:class => specialist_tab_class} 
      - if has_specialists
        %table.table.table-condensed.tablesorter{:id => 'specialist_table'}
          %thead
            %tr{:class => 'tableheader'}
              %th{:class => "{sorter: 'bylastname'}"} Specialist
              %th{:class => "{sorter: 'status'} status_column"} Accepting New<br>Patients?
              %th{:class => "{sorter: 'waittime'} wait_time_column"} Average Patient<br>Wait Time
              %th{:class => "{sorter: 'blanks_to_bottom'}"} City
          %tbody
            - (@specialization.specialists).each do |specialist|
              - next if not specialist.show_in_table?
              %tr{:class => specialist.not_responded? ? "not-responded" : ""}
                %td
                  %a.ajax{"href" => specialist_path(specialist)}= specialist.name
                %td
                  %span{:class => "status_#{specialist.status_class}"}= specialist.status_class
                %td= specialist.waittime
                %td= specialist.city
          
    #clinic_tab.tab-pane{:class => clinic_tab_class}
      - if has_clinics
        %table.table.table-condensed{:class => 'tablesorter {sortlist: [[2,0],[3,0]]}', :id => 'clinic_table'}
          %thead
            %tr{:class => 'tableheader'}
              %th{:class => "{sorter: 'bylastname'} name_column"} Clinic
              %th{:class => "{sorter: 'status'} status_column"} Accepting New<br>Patients?
              %th{:class => "{sorter: 'waittime'} wait_time_column"} Average Patient<br>Wait Time
              %th{:class => "{sorter: 'blanks_to_bottom'}"} City
          %tbody
            - (@specialization.clinics).each do |clinic|
              - next if not clinic.show_in_table?
              %tr{:class => clinic.not_responded? ? "not-responded" : ""}
                %td
                  %a.ajax{"href" => clinic_path(clinic)}= clinic.name
                %td
                  %span{:class => "status_#{clinic.status_class}"}= clinic.status_class
                %td= clinic.waittime
                %td= clinic.city

%p.admin.btn-group
  - if can? :update, @specialization
    = link_to("<i class='icon-pencil'></i>".html_safe + " Edit Specialty", edit_specialization_path(@specialization), :class => "btn ajax")
  - if can? :destroy, @specialization
    = link_to("<i class='icon-trash'></i>".html_safe + " Delete Specialty", @specialization, :confirm => "Delete #{@specialization.name}?", :method => :delete, :class => "btn")

%p.admin.btn-group
  - if can? :update, @specialization
    = link_to("<i class='icon-plus-sign'></i>".html_safe + " New Specialist", new_specialization_specialist_path(@specialization), :class => "btn ajax")
    = link_to("<i class='icon-plus-sign'></i>".html_safe + " New Clinic", new_specialization_clinic_path(@specialization), :class => "btn ajax")
    = link_to("<i class='icon-plus-sign'></i>".html_safe + " New Area of Practice", new_specialization_procedure_path(@specialization), :class => "btn ajax")
